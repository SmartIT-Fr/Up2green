<?xml version="1.0" encoding="UTF-8"?>

<project name="${projectName}" default="build" basedir=".">
    <property name="basedir" value="${project.basedir}"/>
    <property name="source" value="src"/>
    <property name="ignore.map" value="**/Model/map/*"/>
    <property name="ignore.om" value="**/Model/om/*"/>
    <property name="ignore.build" value="build"/>
    <property name="ignore" value="${ignore.map},${ignore.om}"/>

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>

        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit">
            <arg line="-c                 ${project.basedir}/app/
                        --coverage-html    ${project.basedir}/build/coverage/
                        --coverage-clover  ${project.basedir}/build/logs/clover.xml
                        --log-junit        ${project.basedir}/build/logs/phpunit.xml" />
        </exec>
    </target>

    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
                 --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
                 --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
                 --exclude=${ignore.build}
                 ${source}" />
        </exec>
    </target>

    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg line="${source}
                 xml
                 build/phpmd.xml
                 --ignore=${ignore}
                 --reportfile ${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml
                 --exclude src/Up2green/ReforestationBundle/Model/om
                 --exclude src/Up2green/EducationBundle/Model/om
                 --exclude src/Up2green/CommonBundle/Model/om
                 --exclude src/Up2green/UserBundle/Model/om
                 --exclude src/Up2green/BlogBundle/Model/om
                 --exclude src/Up2green/SearchBundle/Model/om
                 --exclude src/Up2green/ReforestationBundle/Model/map
                 --exclude src/Up2green/EducationBundle/Model/map
                 --exclude src/Up2green/CommonBundle/Model/map
                 --exclude src/Up2green/UserBundle/Model/map
                 --exclude src/Up2green/BlogBundle/Model/map
                 --exclude src/Up2green/SearchBundle/Model/map
                 ${source}" />
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv
                 --exclude ${ignore}
                 --suffixes php
                 ${source}" />
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="phpcs" output="/dev/null">
            <arg line="--report=checkstyle
                 --report-file=${basedir}/build/logs/checkstyle.xml
                 --standard=Symfony2
                 --extensions=php
                 --ignore=${ignore}
                 ${source}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc">
            <arg line="-d ${source} -t ${basedir}/build/api -i ${ignore.build}" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg line="--log=${basedir}/build/logs
                 --source=${source}
                 --output=${basedir}/build/code-browser
                 --ignore=${ignore.build}
                 " />
        </exec>
    </target>

    <target name="vendors" description="Install vendors">
        <exec executable="composer.phar">
            <arg value="install" />
        </exec>
    </target>

    <target name="propel" description="Propel build">
        <exec executable="app/console">
            <arg line="propel:database:drop --force" />
        </exec>

        <exec executable="app/console">
            <arg line="propel:database:create" />
        </exec>

        <exec executable="app/console">
            <arg line="propel:acl:init --force" />
        </exec>

        <exec executable="rm">
            <arg line="-Rf ${basedir}/src/Up2green/*Bundle/Model/om/" />
            <arg line="-Rf ${basedir}/src/Up2green/*Bundle/Model/map/" />
        </exec>

        <exec executable="app/console">
            <arg line="propel:build --insert-sql" />
        </exec>

        <exec executable="app/console">
            <arg line="propel:fixtures:load" />
        </exec>
    </target>

    <target name="symlinks" description="MopaBootstrap symlinks">
        <exec executable="app/console">
            <arg line="mopa:bootstrap:install" />
        </exec>
    </target>

    <target name="build" depends="clean,vendors,propel,symlinks,pdepend,phpmd,phpcpd,phpcs,phpdoc,phploc,phpunit,phpcb"/>
</project>
